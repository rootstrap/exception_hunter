name: config

on:
  pull_request:
    branches:
    - develop

jobs:
  build:

    runs-on: ubuntu-latest
    # Service containers to run with `runner-job`
    services:
      postgres:
        image: postgres:11
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          PGHOST: 127.0.0.1
          PGUSER: postgres
          RAILS_ENV: test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-ruby@v1
        with:
          ruby-version: 2.6.5

      - name: Install dependent Postgres libraries
        run: sudo apt-get -yqq install libpq-dev

      - name: Bundle install
        run: |
          gem install bundler -v '1.17.3'
          bundle install --jobs 4 --retry 3

      - name: Setup Database
        run: |
          sudo mkdir /var/pgsql_socket/
          sudo ln -s /private/tmp/.s.PGSQL.5432 /var/pgsql_socket/
          cp .github/database.yml config/database.yml
          bundle exec rake db:create
          bundle exec rake db:schema:load
        env:
          RAILS_ENV: test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres

      - name: Run tests and code analysis
        run: |
          COVERAGE=true bundle exec rspec --require rails_helper
          bundle exec rake code_analysis
        env:
          RAILS_ENV: test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres

      - name: Upload coverage results
        uses: actions/upload-artifact@v1
        if: always()
        with:
          name: coverage-report
          path: coverage
